#!/usr/bin/env ruby

require 'shiplight'

USAGE = <<USAGE.strip.freeze
  Usage: shiplight [-i interval] [-r repo] [-u user] [-v]
USAGE

HELP = <<HELP.freeze
  -e, --exclude <regex>   project(s) to exclude from monitoring
  -h, --help              show this help
  -i, --interval          polling interval (seconds)
  -r, --repo <regex>      project(s) to monitor
  -u, --user <regex>      user to monitor
  -v, --verbose           produce verbose output
  -w, --within <n>        monitor builds finished within the past <n> hours
HELP

args = {}
next_arg = nil

ARGV.each do |arg|
  case arg
  when '-e', '--exclude' then next_arg = :exclude
  when '-h', '--help' then args[:help] = true
  when '-i', '--interval' then next_arg = :interval
  when '-r', '--repo' then next_arg = :repo
  when '-u', '--user' then next_arg = :user
  when '-v', '--verbose' then args[:verbose] = true
  when '-w', '--within' then next_arg = :within
  else
    if next_arg
      args[next_arg] = arg
    else
      args[:help] = true
    end
  end
end

if args[:help]
  puts USAGE
  puts HELP
else
  Shiplight::BuildMonitor.new(args).run
end
